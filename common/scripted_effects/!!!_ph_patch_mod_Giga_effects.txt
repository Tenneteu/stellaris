#_|z无视/z特殊|		所有|per_pop|岗位都不进行联动,Giga所有的per_pop都是<0.01>
#_|per_pop存在|

#_[Giga岗位debug/Giga_per_pop岗位统计]




###_[Giga岗位debug]		Giga岗位/Giga特殊
#_VAR		TEMP_var_giga_housing=[planet_housing_add=30]
z_pr_eft_plnt_job_debug_mod_Giga = {
	##_[Giga岗位]
	if = { limit = { check_modifier_value = { modifier = job_PR_check_Giga_add value = -1 } }	#_|修正激活|	has_global_flag = z_pr_patch_installed_mod_Giga

		##_[giga_interstellar_researcher]			|specialist/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_interstellar_researcher VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_interstellar_researcher VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_interstellar_researcher }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[physics_research]
			pr_job_resources_basic = { OPT = produces RES = physics_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=physics_research
				CAT=specialist
				IDS=planet_researchers_physics_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = physics_research }
			#_[society_research]
			pr_job_resources_basic = { OPT = produces RES = society_research VALUE = 3}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=society_research
				CAT=specialist
				IDS=planet_researchers_engineering_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = society_research }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=specialist
				IDS=planet_researchers_society_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }

			##_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 3 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_interstellar_researcher_drone]			|complex_drone/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_interstellar_researcher_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_interstellar_researcher_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_interstellar_researcher_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[physics_research]
			pr_job_resources_basic = { OPT = produces RES = physics_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=physics_research
				CAT=complex_drone
				IDS=planet_researchers_physics_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = physics_research }
			#_[society_research]
			pr_job_resources_basic = { OPT = produces RES = society_research VALUE = 3}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=society_research
				CAT=complex_drone
				IDS=planet_researchers_engineering_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = society_research }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=complex_drone
				IDS=planet_researchers_society_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }

			##_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 3 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_interstellar_scavenger]			|specialist/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_interstellar_scavenger VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_interstellar_scavenger VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_interstellar_scavenger }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 3}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=specialist
				IDS=planet_researchers_engineering_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }
			#_[alloys]
			pr_job_resources_basic = { OPT = produces RES = alloys VALUE = 1}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=alloys
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = alloys }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_interstellar_scavenger_drone]			|complex_drone/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_interstellar_scavenger_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_interstellar_scavenger_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_interstellar_scavenger_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 3}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=complex_drone
				IDS=planet_researchers_engineering_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }
			#_[alloys]
			pr_job_resources_basic = { OPT = produces RES = alloys VALUE = 1}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=alloys
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = alloys }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_preserver]			|specialist/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_preserver VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_preserver VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_preserver }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[society_research]
			pr_job_resources_basic = { OPT = produces RES = society_research VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=society_research
				CAT=specialist
				IDS=planet_researchers_society_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = society_research }
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }

			#_[upkeep]
			#_[food]
			pr_job_resources_basic = { OPT = upkeep RES = food VALUE = 1 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=food
				CAT=specialist
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = food }
		}

		##_[giga_preserver_drone]			|complex_drone/planet_researchers|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_preserver_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_preserver_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_preserver_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[society_research]
			pr_job_resources_basic = { OPT = produces RES = society_research VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=society_research
				CAT=complex_drone
				IDS=planet_researchers_society_research	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = society_research }
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }

			#_[upkeep]
			#_[food]
			pr_job_resources_basic = { OPT = upkeep RES = food VALUE = 1 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=food
				CAT=complex_drone
				IDS=planet_researchers	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = food }
		}

		##_[giga_zro_extractor]			|specialist/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_zro_extractor VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_zro_extractor VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_zro_extractor }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[sr_zro]
			pr_job_resources_basic = { OPT = produces RES = sr_zro VALUE = 1}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=sr_zro
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = sr_zro }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 5 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_zro_extractor_drone]			|complex_drone/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_zro_extractor_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_zro_extractor_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_zro_extractor_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[sr_zro]
			pr_job_resources_basic = { OPT = produces RES = sr_zro VALUE = 1}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=sr_zro
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = sr_zro }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 5 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_gas_harvester]			|worker/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_gas_harvester VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_gas_harvester VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_gas_harvester }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[exotic_gases]
			pr_job_resources_basic = { OPT = produces RES = exotic_gases VALUE = 1.5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=exotic_gases
				CAT=worker
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = exotic_gases }

			#_[upkeep]
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 3 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=worker
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 8 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=worker
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[giga_gas_harvester_drone]			|simple_drone/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = giga_gas_harvester_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = giga_gas_harvester_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = giga_gas_harvester_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[exotic_gases]
			pr_job_resources_basic = { OPT = produces RES = exotic_gases VALUE = 1.5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=exotic_gases
				CAT=simple_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = exotic_gases }

			#_[upkeep]
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 3 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=simple_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 8 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=simple_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[virtual_rare_resource]			|specialist/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = virtual_rare_resource VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = virtual_rare_resource VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = virtual_rare_resource }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[volatile_motes]
			pr_job_resources_basic = { OPT = produces RES = volatile_motes VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=volatile_motes
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = volatile_motes }
			#_[rare_crystals]
			pr_job_resources_basic = { OPT = produces RES = rare_crystals VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=rare_crystals
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = rare_crystals }
			#_[exotic_gases]
			pr_job_resources_basic = { OPT = produces RES = exotic_gases VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=exotic_gases
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = exotic_gases }

			#_[upkeep]
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 25 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=specialist
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
		}

		##_[virtual_rare_resource_gestalt]			|complex_drone/planet_refiners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = virtual_rare_resource_gestalt VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = virtual_rare_resource_gestalt VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = virtual_rare_resource_gestalt }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[volatile_motes]
			pr_job_resources_basic = { OPT = produces RES = volatile_motes VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=volatile_motes
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = volatile_motes }
			#_[rare_crystals]
			pr_job_resources_basic = { OPT = produces RES = rare_crystals VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=rare_crystals
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = rare_crystals }
			#_[exotic_gases]
			pr_job_resources_basic = { OPT = produces RES = exotic_gases VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=exotic_gases
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = exotic_gases }

			#_[upkeep]
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 25 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=complex_drone
				IDS=planet_refiners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
		}

		##_[virtual_admin_cap]			|specialist/planet_bureaucrats|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = virtual_admin_cap VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = virtual_admin_cap VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = virtual_admin_cap }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个

			##_[修正统计]
			pr_job_modifier_basic = { MOD = country_admin_cap_add VALUE = 20 }
			if = {#_|星区总督|
				limit = {
					exists = sector
					sector = {
						exists = leader
						leader = { has_trait = leader_trait_bureaucrat }
					}
				}
				pr_job_modifier_triggered = { MOD = country_admin_cap_add VALUE = 2 }
			}
			if = {#_|专精|
				limit = { has_designation = col_bureau }
				pr_job_modifier_triggered = { MOD = country_admin_cap_add VALUE = 4 }
			}
			pr_job_modifier_tally = { MOD = country_admin_cap_add }
			
			pr_job_modifier_basic = { MOD = planet_stability_add VALUE = 0 }
			if = {#_|国策|
				limit = {
					exists = owner
					owner = { has_valid_civic = civic_byzantine_bureaucracy }
				}
				pr_job_modifier_triggered = { MOD = planet_stability_add VALUE = 1 }
			}
			pr_job_modifier_tally = { MOD = planet_stability_add }
			
			##_[produce]	资源类型
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 0}
			if = {#_|国策|
				limit = {
					exists = owner
					owner = { has_valid_civic = civic_byzantine_bureaucracy }
				}
				pr_job_resources_trigger = { OPT = produces RES = unity VALUE = 1 }
			}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=specialist
				IDS=planet_bureaucrats	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }

			#_[upkeep]
			#_[consumer_goods]
			pr_job_resources_basic = { OPT = upkeep RES = consumer_goods VALUE = 1 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=consumer_goods
				CAT=specialist
				IDS=planet_bureaucrats	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = consumer_goods }
		}

		##_[virtual_admin_cap_hive]			|complex_drone/planet_synapse_drones_unity|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = virtual_admin_cap_hive VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = virtual_admin_cap_hive VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = virtual_admin_cap_hive }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[修正统计]
			pr_job_modifier_basic = { MOD = country_admin_cap_add VALUE = 10 }
			if = {#_|星区总督|
				limit = { 
					exists = sector
					sector = {
						exists = leader
						leader = { has_trait = leader_trait_mindfulness }
					}
				}
				pr_job_modifier_triggered = { MOD = country_admin_cap_add VALUE = 2 }
			}
			pr_job_modifier_tally = { MOD = country_admin_cap_add }
			pr_job_modifier_basic = { MOD = planet_stability_add VALUE = 0 }
			if = {#_|行星修正|
				limit = { has_modifier = planet_artifact_relays_hivemind }
				pr_job_modifier_triggered = { MOD = planet_stability_add VALUE = 2 }
			}
			pr_job_modifier_tally = { MOD = planet_stability_add }
			pr_job_modifier_basic = { MOD = planet_jobs_simple_drone_produces_mult VALUE = 0 }
			if = {#_|行星修正|
				limit = { has_modifier = planet_artifact_relays_hivemind }
				pr_job_modifier_triggered = { MOD = planet_jobs_simple_drone_produces_mult VALUE = 0.01 }
			}
			pr_job_modifier_tally = { MOD = planet_jobs_simple_drone_produces_mult }
			pr_job_modifier_basic = { MOD = planet_amenities_no_happiness_add VALUE = 0 }
			if = {#_|传统|
				limit = {
					exists = owner
					owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
				}
				pr_job_modifier_triggered = { MOD = planet_amenities_no_happiness_add VALUE = 2 }
			}
			pr_job_modifier_tally = { MOD = planet_amenities_no_happiness_add }
			
			##_[produce]	资源类型
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 3}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=complex_drone
				IDS=planet_synapse_drones_unity	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 2 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_synapse_drones_unity	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 0 }
			pr_job_resources_ratio = { OPT=upkeep RES=minerals RATIO=spcs_v_lithoid WEIGHT=2 }	#_|比例bonus资源|
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=complex_drone
				IDS=planet_synapse_drones_unity	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
			#_[food]
			pr_job_resources_basic = { OPT = upkeep RES = food VALUE = 0 }
			pr_job_resources_ratio = { OPT=upkeep RES=food RATIO=spcs_v_organic WEIGHT=2 }	#_|比例bonus资源|
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=food
				CAT=complex_drone
				IDS=planet_synapse_drones_unity	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = food }
		}

		##_[virtual_admin_cap_machine]			|complex_drone/planet_bureaucrats|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = virtual_admin_cap_machine VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = virtual_admin_cap_machine VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = virtual_admin_cap_machine }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个

			##_[修正统计]
			pr_job_modifier_basic = { MOD = country_admin_cap_add VALUE = 30 }
			if = {#_|星区总督|
				limit = { 
					exists = sector
					sector = {
						exists = leader
						leader = { has_trait = leader_trait_amplifier }
					}
				}
				pr_job_modifier_triggered = { MOD = country_admin_cap_add VALUE = 2 }
			}
			if = {#_|传统|
				limit = { 
					exists = owner
					owner = { has_active_tradition = tr_synchronicity_integrated_preservation }
				}
				pr_job_modifier_triggered = { MOD = country_admin_cap_add VALUE = 6 }
			}
			pr_job_modifier_tally = { MOD = country_admin_cap_add }
			pr_job_modifier_basic = { MOD = planet_stability_add VALUE = 0 }
			if = {#_|行星修正|
				limit = { has_modifier = planet_artifact_relays_machine }
				pr_job_modifier_triggered = { MOD = planet_stability_add VALUE = 2 }
			}
			pr_job_modifier_tally = { MOD = planet_stability_add }
			pr_job_modifier_basic = { MOD = planet_jobs_simple_drone_produces_mult VALUE = 0 }
			if = {#_|行星修正|
				limit = { has_modifier = planet_artifact_relays_machine }
				pr_job_modifier_triggered = { MOD = planet_jobs_simple_drone_produces_mult VALUE = 0.01 }
			}
			pr_job_modifier_tally = { MOD = planet_jobs_simple_drone_produces_mult }
			pr_job_modifier_basic = { MOD = planet_crime_no_happiness_add VALUE = 0 }
			if = {#_|传统|
				limit = { 
					exists = owner
					owner = { has_active_tradition = tr_synchronicity_integrated_preservation }
				}
				pr_job_modifier_triggered = { MOD = planet_crime_no_happiness_add VALUE = -2 }
			}
			pr_job_modifier_tally = { MOD = planet_crime_no_happiness_add }
			
			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_bureaucrats	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[ehof_cultivator]			|specialist/planet_metallurgists|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = ehof_cultivator VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = ehof_cultivator VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = ehof_cultivator }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[ehof_sr_sentient_metal]
			pr_job_resources_basic = { OPT = produces RES = ehof_sr_sentient_metal VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=ehof_sr_sentient_metal
				CAT=specialist
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = ehof_sr_sentient_metal }

			#_[upkeep]
			#_[alloys]
			pr_job_resources_basic = { OPT = upkeep RES = alloys VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=alloys
				CAT=specialist
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = alloys }
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=specialist
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[ehof_cultivation_drone]			|complex_drone/planet_metallurgists|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = ehof_cultivation_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = ehof_cultivation_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = ehof_cultivation_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[ehof_sr_sentient_metal]
			pr_job_resources_basic = { OPT = produces RES = ehof_sr_sentient_metal VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=ehof_sr_sentient_metal
				CAT=complex_drone
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = ehof_sr_sentient_metal }

			#_[upkeep]
			#_[alloys]
			pr_job_resources_basic = { OPT = upkeep RES = alloys VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=alloys
				CAT=complex_drone
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = alloys }
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_metallurgists	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[matter_synthesizer]			|worker/planet_miners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = matter_synthesizer VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = matter_synthesizer VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = matter_synthesizer }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=worker
				IDS=planet_miners_minerals	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 2 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=worker
				IDS=planet_miners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		##_[matter_synthesizer_drone]			|simple_drone/planet_miners|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = matter_synthesizer_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = matter_synthesizer_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = matter_synthesizer_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 4}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=simple_drone
				IDS=planet_miners_minerals	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 2 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=simple_drone
				IDS=planet_miners	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
		}

		#_Birch world
		##_[penrose_weaver]			|specialist/planet_penrose|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_weaver VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = penrose_weaver VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_weaver }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[sr_dark_matter]
			pr_job_resources_basic = { OPT = produces RES = sr_dark_matter VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=sr_dark_matter
				CAT=specialist
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = sr_dark_matter }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=specialist
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=specialist
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
		}

		##_[bore_engineer]			|worker/planet_bore|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = bore_engineer VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = bore_engineer VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = bore_engineer }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 90}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=worker
				IDS=planet_bore	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }
		}

		##_[penrose_engineer]			|worker/planet_penrose|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_engineer VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = penrose_engineer VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_engineer }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[energy]
			pr_job_resources_basic = { OPT = produces RES = energy VALUE = 90}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=energy
				CAT=worker
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = energy }
		}

		##_[structure_engineer]			|specialist/planet_infrastructure|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = structure_engineer VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = structure_engineer VALUE = 2000 VAR = TEMP_var_giga_housing }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = structure_engineer }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个

			##_[修正统计] planet_housing_add = 30 z特殊
			pr_job_modifier_basic = { MOD = planet_amenities_add VALUE = 25 }
			pr_job_modifier_tally = { MOD = planet_amenities_add }
			
			##_[produce]	资源类型
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=specialist
				IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=specialist
				IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }
		}

		##_[structure_manager]			|specialist/planet_infrastructure|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = structure_manager VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = structure_manager VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = structure_manager }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] planet_max_districts_add = 1 job_structure_engineer_add = 4 z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[unity]
	#		pr_job_resources_basic = { OPT = produces RES = unity VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=unity
	#			CAT=specialist
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = unity }
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=specialist
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[bore_manager]			|specialist/planet_bore|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = bore_manager VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = bore_manager VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = bore_manager }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计]job_bore_engineer_add = 8  z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=specialist
	#			IDS=planet_bore	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[penrose_manager]			|specialist/planet_penrose|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_manager VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = penrose_manager VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_manager }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] job_penrose_engineer_add = 8 	job_penrose_weaver_add = 2 z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[physics_research]
	#		pr_job_resources_basic = { OPT = produces RES = physics_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=physics_research
	#			CAT=specialist
	#			IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = physics_research }
	#	}
		

		##_[penrose_weaver_drone]			|complex_drone/planet_penrose|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_weaver_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = penrose_weaver_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_weaver_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[sr_dark_matter]
			pr_job_resources_basic = { OPT = produces RES = sr_dark_matter VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=sr_dark_matter
				CAT=complex_drone
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = sr_dark_matter }

			#_[upkeep]
			#_[energy]
			pr_job_resources_basic = { OPT = upkeep RES = energy VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=energy
				CAT=complex_drone
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = energy }
			#_[minerals]
			pr_job_resources_basic = { OPT = upkeep RES = minerals VALUE = 4 }
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=upkeep
				RES=minerals
				CAT=complex_drone
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = upkeep RES = minerals }
		}

		##_[structure_drone]			|complex_drone/planet_infrastructure|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = structure_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = structure_drone VALUE = 2000 VAR = TEMP_var_giga_housing }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = structure_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个

			##_[修正统计] planet_housing_add = 30 z特殊
			pr_job_modifier_basic = { MOD = planet_amenities_no_happiness_add VALUE = 25 }
			pr_job_modifier_tally = { MOD = planet_amenities_no_happiness_add }
			
			##_[produce]	资源类型
			#_[unity]
			pr_job_resources_basic = { OPT = produces RES = unity VALUE = 2}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=unity
				CAT=complex_drone
				IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = unity }
			#_[engineering_research]
			pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 5}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=engineering_research
				CAT=complex_drone
				IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = engineering_research }
		}

		##_[structure_process]			|complex_drone/planet_infrastructure|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = structure_process VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = structure_process VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = structure_process }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] planet_max_districts_add = 1 job_structure_drone_add = 4 z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[unity]
	#		pr_job_resources_basic = { OPT = produces RES = unity VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=unity
	#			CAT=complex_drone
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = unity }
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=complex_drone
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[structure_mind]			|complex_drone/planet_infrastructure|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = structure_mind VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = structure_mind VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = structure_mind }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] planet_max_districts_add = 1 job_structure_drone_add = 4 z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[unity]
	#		pr_job_resources_basic = { OPT = produces RES = unity VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=unity
	#			CAT=complex_drone
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = unity }
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 10}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=complex_drone
	#			IDS=planet_infrastructure	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[bore_drone]			|simple_drone/planet_bore|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = bore_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = bore_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = bore_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[minerals]
			pr_job_resources_basic = { OPT = produces RES = minerals VALUE = 90}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=minerals
				CAT=simple_drone
				IDS=planet_bore	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = minerals }
		}

		##_[bore_process]			|complex_drone/planet_bore|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = bore_process VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = bore_process VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = bore_process }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计]job_bore_drone_add = 8  z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=complex_drone
	#			IDS=planet_bore	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[bore_mind]			|complex_drone/planet_bore|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = bore_mind VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = bore_mind VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = bore_mind }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计]job_bore_drone_add = 8  z特殊
	#		
	#		##_[produce]	资源类型
	#		#_[engineering_research]
	#		pr_job_resources_basic = { OPT = produces RES = engineering_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=engineering_research
	#			CAT=complex_drone
	#			IDS=planet_bore	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = engineering_research }
	#	}

		##_[penrose_drone]			|simple_drone/planet_penrose|
		if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_drone VALUE = 2000 } }	#_|岗位统计条件|
			z_pr_eft_plnt_prmt_job_add = { JOB = penrose_drone VALUE = 2000 }	#_[add岗位统计]
			z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_drone }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
			
			##_[produce]	资源类型
			#_[energy]
			pr_job_resources_basic = { OPT = produces RES = energy VALUE = 90}
			pr_job_resources_ids_cat = {#_[资源阶层行业]
				OPT=produces
				RES=energy
				CAT=simple_drone
				IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
			}
			pr_job_resources_tally = { OPT = produces RES = energy }
		}

		##_[penrose_process]			|complex_drone/planet_penrose|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_process VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = penrose_process VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_process }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] job_penrose_drone_add = 8	job_penrose_weaver_drone_add = 2
	#		
	#		##_[produce]	资源类型
	#		#_[physics_research]
	#		pr_job_resources_basic = { OPT = produces RES = physics_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=physics_research
	#			CAT=complex_drone
	#			IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = physics_research }
	#	}

		##_[penrose_mind]			|complex_drone/planet_penrose|			per_pop存在/z无视
	#	if = { limit = { z_pr_trgr_plnt_job_db = { JOB = penrose_mind VALUE = 2000 } }	#_|岗位统计条件|
	#		z_pr_eft_plnt_prmt_job_add = { JOB = penrose_mind VALUE = 2000 }	#_[add岗位统计]
	#		z_pr_eft_plnt_prmt_job_per_pop = { JOB = penrose_mind }	#_[per_pop岗位统计]	---只有存在"job_$岗位类型$_per_pop"的时候才加这个
	#
	#		##_[修正统计] job_penrose_drone_add = 8	job_penrose_weaver_drone_add = 2
	#		
	#		##_[produce]	资源类型
	#		#_[physics_research]
	#		pr_job_resources_basic = { OPT = produces RES = physics_research VALUE = 50}
	#		pr_job_resources_ids_cat = {#_[资源阶层行业]
	#			OPT=produces
	#			RES=physics_research
	#			CAT=complex_drone
	#			IDS=planet_penrose	#_参考"参数表"中的"行业对照表"
	#		}
	#		pr_job_resources_tally = { OPT = produces RES = physics_research }
	#	}
	}


	##_[Giga特殊]	核心地块/住房/岗位
	if = {
		limit = { has_global_flag = z_pr_patch_installed_mod_Giga }
		
		##_[核心地块]
		if = { limit = { NOT = { has_deposit = z_pr_d_Giga } }		add_deposit = z_pr_d_Giga }


		##_|住房|	TEMP_var_giga_housing=[planet_housing_add=30]
		remove_planet_flag = z_pr_flg_plnt_giga_housing_2048
		remove_planet_flag = z_pr_flg_plnt_giga_housing_1024
		remove_planet_flag = z_pr_flg_plnt_giga_housing_512
		remove_planet_flag = z_pr_flg_plnt_giga_housing_256
		remove_planet_flag = z_pr_flg_plnt_giga_housing_128
		remove_planet_flag = z_pr_flg_plnt_giga_housing_64
		remove_planet_flag = z_pr_flg_plnt_giga_housing_32
		remove_planet_flag = z_pr_flg_plnt_giga_housing_16
		remove_planet_flag = z_pr_flg_plnt_giga_housing_8
		remove_planet_flag = z_pr_flg_plnt_giga_housing_4
		remove_planet_flag = z_pr_flg_plnt_giga_housing_2
		remove_planet_flag = z_pr_flg_plnt_giga_housing_1
		if = { limit = { is_variable_set = TEMP_var_giga_housing		check_variable = { which = TEMP_var_giga_housing value >= 1 } }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 2048 } }			subtract_variable = { which = TEMP_var_giga_housing value = 2048 }		set_planet_flag = z_pr_flg_plnt_giga_housing_2048 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 1024 } }			subtract_variable = { which = TEMP_var_giga_housing value = 1024 }		set_planet_flag = z_pr_flg_plnt_giga_housing_1024 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 512 } }			subtract_variable = { which = TEMP_var_giga_housing value = 512 }		set_planet_flag = z_pr_flg_plnt_giga_housing_512 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 256 } }			subtract_variable = { which = TEMP_var_giga_housing value = 256 }		set_planet_flag = z_pr_flg_plnt_giga_housing_256 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 128 } }			subtract_variable = { which = TEMP_var_giga_housing value = 128 }		set_planet_flag = z_pr_flg_plnt_giga_housing_128 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 64 }	}			subtract_variable = { which = TEMP_var_giga_housing value = 64 }		set_planet_flag = z_pr_flg_plnt_giga_housing_64 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 32 } }			subtract_variable = { which = TEMP_var_giga_housing value = 32 }		set_planet_flag = z_pr_flg_plnt_giga_housing_32 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 16 } }			subtract_variable = { which = TEMP_var_giga_housing value = 16 }		set_planet_flag = z_pr_flg_plnt_giga_housing_16 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 8 } }			subtract_variable = { which = TEMP_var_giga_housing value = 8 }			set_planet_flag = z_pr_flg_plnt_giga_housing_8 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 4 } }			subtract_variable = { which = TEMP_var_giga_housing value = 4 }			set_planet_flag = z_pr_flg_plnt_giga_housing_4 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 2 } }			subtract_variable = { which = TEMP_var_giga_housing value = 2 }			set_planet_flag = z_pr_flg_plnt_giga_housing_2 }
			if = { limit = { check_variable = { which = TEMP_var_giga_housing value >= 1 } }			subtract_variable = { which = TEMP_var_giga_housing value = 1 }			set_planet_flag = z_pr_flg_plnt_giga_housing_1 }
			#clear
			clear_variable = TEMP_var_giga_housing
		}


		##_|岗位|	所有的per_pop都是<0.01>
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = structure_manager }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = structure_mind }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = structure_process }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = bore_manager }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = penrose_manager }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = bore_mind }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = penrose_mind }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = bore_process }
		z_pr_prmt_eft_plnt_Giga_per_pop = { JOB = penrose_process }
	}
}


###_[Giga_per_pop岗位统计]	per_man/清理flg/添加flg/clear
#_prmt		|JOB|
z_pr_prmt_eft_plnt_Giga_per_pop = {
	if = { limit = { check_modifier_value = { modifier = job_$JOB$_per_pop value > 0 } }
	
		#_[per_man]
		export_modifier_to_variable = { modifier = job_$JOB$_per_pop variable = TEMP_var_giga_per_pop_jobs }	#_[mod值]
		multiply_variable = { which = TEMP_var_giga_per_pop_jobs value = z_pr_var_plnt_man_alpha }	#_[*统计用人力DEFAULT]
		floor_variable = TEMP_var_giga_per_pop_jobs		#_向下取整
		
		#_[清理flg]
		remove_planet_flag = pr_giga_$JOB$_add_512
		remove_planet_flag = pr_giga_$JOB$_add_256
		remove_planet_flag = pr_giga_$JOB$_add_128
		remove_planet_flag = pr_giga_$JOB$_add_64
		remove_planet_flag = pr_giga_$JOB$_add_32
		remove_planet_flag = pr_giga_$JOB$_add_16
		remove_planet_flag = pr_giga_$JOB$_add_8
		remove_planet_flag = pr_giga_$JOB$_add_4
		remove_planet_flag = pr_giga_$JOB$_add_2
		remove_planet_flag = pr_giga_$JOB$_add_1
		
		#_[添加flg]
		if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 1 } }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 512 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 512 }		set_planet_flag = pr_giga_$JOB$_add_512 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 256 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 256 }		set_planet_flag = pr_giga_$JOB$_add_256 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 128 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 128 }		set_planet_flag = pr_giga_$JOB$_add_128 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 64 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 64 }		set_planet_flag = pr_giga_$JOB$_add_64 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 32 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 32 }		set_planet_flag = pr_giga_$JOB$_add_32 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 16 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 16 }		set_planet_flag = pr_giga_$JOB$_add_16 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 8 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 8 }		set_planet_flag = pr_giga_$JOB$_add_8 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 4 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 4 }		set_planet_flag = pr_giga_$JOB$_add_4 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 2 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 2 }		set_planet_flag = pr_giga_$JOB$_add_2 }
			if = { limit = { check_variable = { which = TEMP_var_giga_per_pop_jobs value >= 1 } }			subtract_variable = { which = TEMP_var_giga_per_pop_jobs value = 1 }		set_planet_flag = pr_giga_$JOB$_add_1 }
		}
		
		#clear
		clear_variable = TEMP_var_giga_per_pop_jobs
	}
}