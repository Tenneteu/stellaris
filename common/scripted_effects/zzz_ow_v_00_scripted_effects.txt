###_|产业革命|	原版eft	###############################################################
#_[cntr_死灵牺牲]




#_vanilla		/00_scripted_effects.txt

###_[cntr_死灵牺牲]	乘数设置/比例设置/献祭行为
#_输出var	|sacrifice_result_mult/edict_length_modifiers|
death_cult_sacrifice_effect = {
	#First we need to get the variables that determine how big the boon is

	# Formula is ( initiates * random factor ) / (total pops), and then round that to the nearest 0.1 to avoid weird-looking results
	random_list = {
		#This is effectively ( base * random ), where base = 30
		#It is balanced so that sacrificing 5% of your pops gives a really good result

		1 = {
			set_variable = {
				which = sacrifice_random_mult
				value = 15
			}
		}
		4 = {
			set_variable = {
				which = sacrifice_random_mult
				value = 20
			}
		}
		1 = {
			set_variable = {
				which = sacrifice_random_mult
				value = 25
			}
		}
	}
	if = { #small empire penalty: losing 1 pop out of 30 is not the same as 30 out of 900 with logarithmic growth
		limit = {
			OR = {#+产业革命
				num_pops < 100
				check_variable = { which = z_pr_var_cntr_man value < 100 }	#_|全国人力|
			}
		}
		multiply_variable = {
			which = sacrifice_random_mult
			value = 0.8
		}
		if = {
			OR = {#+产业革命
				num_pops < 50
				check_variable = { which = z_pr_var_cntr_man value < 50 }	#_|全国人力|
			}
			multiply_variable = {
				which = sacrifice_random_mult
				value = 0.8
			}
		}
	}
	
	
	##_[乘数设置]
	#_|产业革命|
	if = { limit = { has_country_flag = z_pr_flg_cntr_reg }
		set_variable = { which = sacrifice_result_mult value = 0 }
		every_owned_planet = {
			limit = {
				is_colony = yes
				is_under_colonization = no
				is_variable_set = z_pr_var_plnt_man
				is_variable_set = z_pr_var_job_actual_mortal_initiate
				is_variable_set = z_pr_var_plnt_job_actual
			}
			set_variable = { which = TEMP_var_job value = z_pr_var_job_actual_mortal_initiate }
			divide_variable = { which = TEMP_var_job value = z_pr_var_plnt_job_actual }	#_|献祭品比例|
			multiply_variable = { which = TEMP_var_job value = z_pr_var_plnt_man }	#_|献祭品人力分配|
			prev = { change_variable = { which = sacrifice_result_mult value = prev.TEMP_var_job } }
		#	clear_variable = TEMP_var_job	#献祭后清除
		}
		round_variable = sacrifice_result_mult
	}
	#_|vanilla|
	else_if = { limit = { always = yes }
		export_trigger_value_to_variable = {
			trigger = num_assigned_jobs
			parameters = {
				job = mortal_initiate
			}
			variable = sacrifice_result_mult
		}
	}


	multiply_variable = {
		which = sacrifice_result_mult
		value = sacrifice_random_mult
	}
	clear_variable = sacrifice_random_mult
	
	
	##_[比例设置]
	#_|产业革命|
	if = { limit = { has_country_flag = z_pr_flg_cntr_reg		is_variable_set = z_pr_var_cntr_man }	#_|全国人力|
		divide_variable = {
			which = sacrifice_result_mult
			value = z_pr_var_cntr_man
		}
	}
	#_|vanilla|
	else_if = { limit = { always = yes }
		divide_variable = {
			which = sacrifice_result_mult
			value = trigger:num_pops
		}
	}


	round_variable_to_closest = {
		which = sacrifice_result_mult
		value = 0.1
	}

	#We also need the edicts length multiplier for the modifiers
	export_modifier_to_variable = {
		modifier = edict_length_mult
		variable = edict_length_modifiers
	}
	change_variable = { # Needs to be 1 + mult
		which = edict_length_modifiers
		value = 1
	}


	#Now we do the sacrifice
	##_[献祭行为]
	#_|产业革命|
	if = { limit = { has_country_flag = z_pr_flg_cntr_reg }	#_|全国人力|
		every_owned_planet = {
			limit = {
				is_variable_set = TEMP_var_job	#_可能不是整数
				is_variable_set = z_pr_var_plnt_man
			}
			subtract_variable = { which = z_pr_var_plnt_man value = TEMP_var_job }
			round_variable = z_pr_var_plnt_man	#_四舍五入
			if = { limit = { check_variable = { which = z_pr_var_plnt_man value < 0 } }
				set_variable = { which = z_pr_var_plnt_man value = 0 }
			}
			clear_variable = TEMP_var_job	#献祭后清除
		}
	}
	#_|vanilla|
	else_if = { limit = { always = yes }
		every_owned_pop = {
			limit = { has_job = mortal_initiate }
			kill_pop = yes
		}
	}
}
